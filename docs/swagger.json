{
    "swagger": "2.0",
    "info": {
        "description": "API for test task",
        "title": "API for test task",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8888",
    "basePath": "/api/v1",
    "paths": {
        "/event": {
            "post": {
                "description": "Insert article",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Insert article",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/event/{eventType}/{eventTime}": {
            "get": {
                "description": "Get articles by type and time",
                "tags": [
                    "events"
                ],
                "summary": "Get articles by type and time",
                "parameters": [
                    {
                        "type": "string",
                        "description": "event type",
                        "name": "eventType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "event time",
                        "name": "eventTime",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Article"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "healthcheck endpoint",
                "tags": [
                    "healthcheck"
                ],
                "summary": "healthcheck",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Article": {
            "type": "object",
            "properties": {
                "eventID": {
                    "type": "integer"
                },
                "eventTime": {
                    "type": "string"
                },
                "eventType": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        }
    }
}